org: lukejgaskell
app: represent
service: backend

frameworkVersion: "2"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  votesTableName: "votes-table-${self:provider.stage}"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [VotesTable, Arn]
  environment:
    VOTES_TABLE: ${self:custom.votesTableName}
    API_KEY: ${param:proPublicaAPIKey}

functions:
  syncVotes:
    handler: votes-sync.handler.run
    events:
      - schedule: cron(0 8,16 ? * * *)
  graphql:
    handler: graphql.handler.run
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true

resources:
  Resources:
    VotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: yearMonth
            AttributeType: S
          - AttributeName: dateTime
            AttributeType: S
        KeySchema:
          - AttributeName: yearMonth
            KeyType: HASH
          - AttributeName: dateTime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.votesTableName}
